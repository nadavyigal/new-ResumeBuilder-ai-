openapi: 3.0.3
info:
  title: AI Resume Optimizer API
  description: API for uploading resumes, analyzing job descriptions, and generating optimized resumes
  version: 1.0.0
  contact:
    name: AI Resume Optimizer Team

servers:
  - url: /api
    description: API Routes

paths:
  /upload-resume:
    post:
      summary: Upload and parse resume file
      description: Accepts PDF or Word resume files, parses content into structured data
      operationId: uploadResume
      tags:
        - Resume Management
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Resume file (PDF or DOCX, max 10MB)
              required:
                - file
      responses:
        '200':
          description: Resume uploaded and parsed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeUploadResponse'
        '400':
          description: Invalid file format or size
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: File too large (>10MB)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - user not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ingest-jd:
    post:
      summary: Process job description
      description: Accepts job description text or URL, extracts key information
      operationId: ingestJobDescription
      tags:
        - Job Description Processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDescriptionRequest'
      responses:
        '200':
          description: Job description processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDescriptionResponse'
        '400':
          description: Invalid input or URL unreachable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /optimize:
    post:
      summary: Generate optimized resume
      description: Creates AI-optimized resume tailored to job description
      operationId: optimizeResume
      tags:
        - AI Optimization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizationRequest'
      responses:
        '200':
          description: Optimization completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationResponse'
        '400':
          description: Invalid request or quota exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '402':
          description: Payment required (free tier exceeded)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
        '408':
          description: Processing timeout (>20 seconds)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /score/{optimizationId}:
    get:
      summary: Get optimization match score and analysis
      description: Retrieves detailed match score and gap analysis for an optimization
      operationId: getOptimizationScore
      tags:
        - AI Optimization
      parameters:
        - name: optimizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Optimization ID
      responses:
        '200':
          description: Score analysis retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreAnalysisResponse'
        '404':
          description: Optimization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /download/{optimizationId}:
    get:
      summary: Download optimized resume
      description: Downloads resume in specified format (PDF or DOCX)
      operationId: downloadResume
      tags:
        - Export
      parameters:
        - name: optimizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Optimization ID
        - name: format
          in: query
          required: true
          schema:
            type: string
            enum: [pdf, docx]
          description: Download format
      responses:
        '200':
          description: File download successful
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
        '404':
          description: Optimization or file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /templates:
    get:
      summary: Get available resume templates
      description: Lists all resume templates (free and premium)
      operationId: getTemplates
      tags:
        - Templates
      responses:
        '200':
          description: Templates retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ResumeUploadResponse:
      type: object
      properties:
        resume_id:
          type: string
          format: uuid
          description: Unique resume identifier
        filename:
          type: string
          description: Original filename
        parsing_status:
          type: string
          enum: [pending, success, failed]
          description: Parsing status
        parsed_data:
          $ref: '#/components/schemas/ParsedResumeData'
        message:
          type: string
          description: Success message
      required:
        - resume_id
        - filename
        - parsing_status
        - message

    ParsedResumeData:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/ContactInfo'
        summary:
          type: string
          description: Professional summary
        experience:
          type: array
          items:
            $ref: '#/components/schemas/ExperienceItem'
        education:
          type: array
          items:
            $ref: '#/components/schemas/EducationItem'
        skills:
          $ref: '#/components/schemas/SkillsSection'

    ContactInfo:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        location:
          type: string
        linkedin:
          type: string
          format: uri
        website:
          type: string
          format: uri

    ExperienceItem:
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        description:
          type: string
        bullets:
          type: array
          items:
            type: string

    EducationItem:
      type: object
      properties:
        institution:
          type: string
        degree:
          type: string
        field:
          type: string
        graduationYear:
          type: string
        gpa:
          type: string

    SkillsSection:
      type: object
      properties:
        technical:
          type: array
          items:
            type: string
        soft:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        certifications:
          type: array
          items:
            type: string

    JobDescriptionRequest:
      type: object
      properties:
        source_type:
          type: string
          enum: [text, url]
          description: Input method
        text:
          type: string
          description: Job description text (required if source_type=text)
        url:
          type: string
          format: uri
          description: Job posting URL (required if source_type=url)
      required:
        - source_type

    JobDescriptionResponse:
      type: object
      properties:
        jd_id:
          type: string
          format: uuid
          description: Job description identifier
        extracted_data:
          $ref: '#/components/schemas/ExtractedJobData'
        cleaned_text:
          type: string
          description: Cleaned job description text
        message:
          type: string
      required:
        - jd_id
        - extracted_data
        - cleaned_text
        - message

    ExtractedJobData:
      type: object
      properties:
        company:
          type: string
        title:
          type: string
        location:
          type: string
        employment_type:
          type: string
          enum: [full-time, part-time, contract, internship]
        experience_level:
          type: string
          enum: [entry, mid, senior, executive]
        requirements:
          type: object
          properties:
            must_have:
              type: array
              items:
                type: string
            nice_to_have:
              type: array
              items:
                type: string
            experience_years:
              type: number
            education:
              type: array
              items:
                type: string
        responsibilities:
          type: array
          items:
            type: string
        benefits:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string

    OptimizationRequest:
      type: object
      properties:
        resume_id:
          type: string
          format: uuid
          description: Resume to optimize
        job_description_id:
          type: string
          format: uuid
          description: Target job description
        template_key:
          type: string
          description: Template to use for formatting
      required:
        - resume_id
        - job_description_id
        - template_key

    OptimizationResponse:
      type: object
      properties:
        optimization_id:
          type: string
          format: uuid
          description: Optimization identifier
        match_score:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Match percentage
        optimized_data:
          $ref: '#/components/schemas/ParsedResumeData'
        processing_time:
          type: number
          description: Processing time in seconds
        message:
          type: string
      required:
        - optimization_id
        - match_score
        - optimized_data
        - processing_time
        - message

    ScoreAnalysisResponse:
      type: object
      properties:
        optimization_id:
          type: string
          format: uuid
        match_score:
          type: number
          format: float
        analysis:
          type: object
          properties:
            keyword_match:
              type: object
              properties:
                total_keywords:
                  type: number
                matched_keywords:
                  type: number
                missing_keywords:
                  type: array
                  items:
                    type: string
                score:
                  type: number
            skill_gap:
              type: object
              properties:
                required_skills:
                  type: array
                  items:
                    type: string
                matching_skills:
                  type: array
                  items:
                    type: string
                missing_skills:
                  type: array
                  items:
                    type: string
                score:
                  type: number
            experience_match:
              type: object
              properties:
                years_required:
                  type: number
                years_candidate:
                  type: number
                level_match:
                  type: boolean
                score:
                  type: number
            recommendations:
              type: array
              items:
                type: string

    TemplatesResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template'

    Template:
      type: object
      properties:
        key:
          type: string
          description: Template identifier
        name:
          type: string
          description: Display name
        description:
          type: string
          description: Template description
        family:
          type: string
          enum: [ats, modern, creative]
          description: Template category
        is_premium:
          type: boolean
          description: Requires premium subscription
        preview_url:
          type: string
          format: uri
          description: Template preview image

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details
      required:
        - error
        - code

    PaymentRequiredResponse:
      type: object
      properties:
        error:
          type: string
          description: Payment required message
        code:
          type: string
          enum: [QUOTA_EXCEEDED]
          description: Error code
        quota_info:
          type: object
          properties:
            current_tier:
              type: string
              enum: [free, premium]
            optimizations_used:
              type: number
            optimizations_limit:
              type: number
        upgrade_url:
          type: string
          format: uri
          description: URL to upgrade subscription
      required:
        - error
        - code
        - quota_info

  securitySchemes:
    SupabaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT token

security:
  - SupabaseAuth: []

tags:
  - name: Resume Management
    description: Resume upload and parsing operations
  - name: Job Description Processing
    description: Job description analysis and extraction
  - name: AI Optimization
    description: AI-powered resume optimization
  - name: Export
    description: Resume download and export
  - name: Templates
    description: Resume template management

